
CS120B_LAB11_PART2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004a  00800100  0000031a  000003ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000031a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  0080014a  0080014a  000003f8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000428  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000468  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e39  00000000  00000000  00000508  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009af  00000000  00000000  00001341  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000702  00000000  00000000  00001cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  000023f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059a  00000000  00000000  00002558  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000054c  00000000  00000000  00002af2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  0000303e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	01 c1       	rjmp	.+514    	; 0x238 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e1       	ldi	r30, 0x1A	; 26
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 34       	cpi	r26, 0x4A	; 74
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e4       	ldi	r26, 0x4A	; 74
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 36       	cpi	r26, 0x62	; 98
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	f6 d0       	rcall	.+492    	; 0x2b0 <main>
  c4:	28 c1       	rjmp	.+592    	; 0x316 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
		default:
			break;
	}

	return state;
};
  c8:	18 16       	cp	r1, r24
  ca:	19 06       	cpc	r1, r25
  cc:	5c f0       	brlt	.+22     	; 0xe4 <delay_ms+0x1c>
  ce:	08 95       	ret
  d0:	00 00       	nop
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	31 09       	sbc	r19, r1
  d6:	e1 f7       	brne	.-8      	; 0xd0 <delay_ms+0x8>
  d8:	4f 5f       	subi	r20, 0xFF	; 255
  da:	5f 4f       	sbci	r21, 0xFF	; 255
  dc:	84 17       	cp	r24, r20
  de:	95 07       	cpc	r25, r21
  e0:	19 f4       	brne	.+6      	; 0xe8 <delay_ms+0x20>
  e2:	08 95       	ret
  e4:	40 e0       	ldi	r20, 0x00	; 0
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	27 e0       	ldi	r18, 0x07	; 7
  ea:	33 e0       	ldi	r19, 0x03	; 3
  ec:	f1 cf       	rjmp	.-30     	; 0xd0 <delay_ms+0x8>

000000ee <LCD_WriteCommand>:
  ee:	5e 98       	cbi	0x0b, 6	; 11
  f0:	88 b9       	out	0x08, r24	; 8
  f2:	5f 9a       	sbi	0x0b, 7	; 11
  f4:	00 00       	nop
  f6:	5f 98       	cbi	0x0b, 7	; 11
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	e5 cf       	rjmp	.-54     	; 0xc8 <delay_ms>
  fe:	08 95       	ret

00000100 <LCD_ClearScreen>:
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	f5 cf       	rjmp	.-22     	; 0xee <LCD_WriteCommand>
 104:	08 95       	ret

00000106 <LCD_Cursor>:
 106:	81 31       	cpi	r24, 0x11	; 17
 108:	18 f4       	brcc	.+6      	; 0x110 <LCD_Cursor+0xa>
 10a:	81 58       	subi	r24, 0x81	; 129
 10c:	f0 cf       	rjmp	.-32     	; 0xee <LCD_WriteCommand>
 10e:	08 95       	ret
 110:	81 55       	subi	r24, 0x51	; 81
 112:	ed cf       	rjmp	.-38     	; 0xee <LCD_WriteCommand>
 114:	08 95       	ret

00000116 <LCD_init>:
 116:	84 e6       	ldi	r24, 0x64	; 100
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	d6 df       	rcall	.-84     	; 0xc8 <delay_ms>
 11c:	88 e3       	ldi	r24, 0x38	; 56
 11e:	e7 df       	rcall	.-50     	; 0xee <LCD_WriteCommand>
 120:	86 e0       	ldi	r24, 0x06	; 6
 122:	e5 df       	rcall	.-54     	; 0xee <LCD_WriteCommand>
 124:	8f e0       	ldi	r24, 0x0F	; 15
 126:	e3 df       	rcall	.-58     	; 0xee <LCD_WriteCommand>
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	e1 df       	rcall	.-62     	; 0xee <LCD_WriteCommand>
 12c:	8a e0       	ldi	r24, 0x0A	; 10
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	cb cf       	rjmp	.-106    	; 0xc8 <delay_ms>
 132:	08 95       	ret

00000134 <LCD_WriteData>:
 134:	5e 9a       	sbi	0x0b, 6	; 11
 136:	88 b9       	out	0x08, r24	; 8
 138:	5f 9a       	sbi	0x0b, 7	; 11
 13a:	00 00       	nop
 13c:	5f 98       	cbi	0x0b, 7	; 11
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	c2 cf       	rjmp	.-124    	; 0xc8 <delay_ms>
 144:	08 95       	ret

00000146 <LCD_DisplayString>:
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	18 2f       	mov	r17, r24
 150:	eb 01       	movw	r28, r22
 152:	d6 df       	rcall	.-84     	; 0x100 <LCD_ClearScreen>
 154:	88 81       	ld	r24, Y
 156:	88 23       	and	r24, r24
 158:	51 f0       	breq	.+20     	; 0x16e <LCD_DisplayString+0x28>
 15a:	01 e0       	ldi	r16, 0x01	; 1
 15c:	01 0f       	add	r16, r17
 15e:	81 2f       	mov	r24, r17
 160:	d2 df       	rcall	.-92     	; 0x106 <LCD_Cursor>
 162:	89 91       	ld	r24, Y+
 164:	e7 df       	rcall	.-50     	; 0x134 <LCD_WriteData>
 166:	10 2f       	mov	r17, r16
 168:	88 81       	ld	r24, Y
 16a:	81 11       	cpse	r24, r1
 16c:	f6 cf       	rjmp	.-20     	; 0x15a <LCD_DisplayString+0x14>
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	1f 91       	pop	r17
 174:	0f 91       	pop	r16
 176:	08 95       	ret

00000178 <TickFct_LCD>:
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
 17c:	ec 01       	movw	r28, r24
 17e:	40 91 4f 01 	lds	r20, 0x014F	; 0x80014f <j>
 182:	50 91 50 01 	lds	r21, 0x0150	; 0x800150 <j+0x1>
 186:	da 01       	movw	r26, r20
 188:	a0 50       	subi	r26, 0x00	; 0
 18a:	bf 4f       	sbci	r27, 0xFF	; 255
 18c:	e1 e5       	ldi	r30, 0x51	; 81
 18e:	f1 e0       	ldi	r31, 0x01	; 1
 190:	21 e6       	ldi	r18, 0x61	; 97
 192:	31 e0       	ldi	r19, 0x01	; 1
 194:	8d 91       	ld	r24, X+
 196:	81 93       	st	Z+, r24
 198:	e2 17       	cp	r30, r18
 19a:	f3 07       	cpc	r31, r19
 19c:	d9 f7       	brne	.-10     	; 0x194 <TickFct_LCD+0x1c>
 19e:	4f 5f       	subi	r20, 0xFF	; 255
 1a0:	5f 4f       	sbci	r21, 0xFF	; 255
 1a2:	50 93 50 01 	sts	0x0150, r21	; 0x800150 <j+0x1>
 1a6:	40 93 4f 01 	sts	0x014F, r20	; 0x80014f <j>
 1aa:	61 e5       	ldi	r22, 0x51	; 81
 1ac:	71 e0       	ldi	r23, 0x01	; 1
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	ca df       	rcall	.-108    	; 0x146 <LCD_DisplayString>
 1b2:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <j>
 1b6:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <j+0x1>
 1ba:	c6 97       	sbiw	r24, 0x36	; 54
 1bc:	21 f4       	brne	.+8      	; 0x1c6 <TickFct_LCD+0x4e>
 1be:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <j+0x1>
 1c2:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <j>
 1c6:	ce 01       	movw	r24, r28
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	08 95       	ret

000001ce <TimerSet>:
 1ce:	60 93 46 01 	sts	0x0146, r22	; 0x800146 <_avr_timer_M>
 1d2:	70 93 47 01 	sts	0x0147, r23	; 0x800147 <_avr_timer_M+0x1>
 1d6:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <_avr_timer_M+0x2>
 1da:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <_avr_timer_M+0x3>
 1de:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <__data_end>
 1e2:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <__data_end+0x1>
 1e6:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <__data_end+0x2>
 1ea:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <__data_end+0x3>
 1ee:	08 95       	ret

000001f0 <TimerOn>:
 1f0:	8b e0       	ldi	r24, 0x0B	; 11
 1f2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 1f6:	8d e7       	ldi	r24, 0x7D	; 125
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1fe:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 202:	82 e0       	ldi	r24, 0x02	; 2
 204:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 208:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 20c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 210:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <_avr_timer_M>
 214:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <_avr_timer_M+0x1>
 218:	a0 91 48 01 	lds	r26, 0x0148	; 0x800148 <_avr_timer_M+0x2>
 21c:	b0 91 49 01 	lds	r27, 0x0149	; 0x800149 <_avr_timer_M+0x3>
 220:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__data_end>
 224:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__data_end+0x1>
 228:	a0 93 4c 01 	sts	0x014C, r26	; 0x80014c <__data_end+0x2>
 22c:	b0 93 4d 01 	sts	0x014D, r27	; 0x80014d <__data_end+0x3>
 230:	8f b7       	in	r24, 0x3f	; 63
 232:	80 68       	ori	r24, 0x80	; 128
 234:	8f bf       	out	0x3f, r24	; 63
 236:	08 95       	ret

00000238 <__vector_13>:
 238:	1f 92       	push	r1
 23a:	0f 92       	push	r0
 23c:	0f b6       	in	r0, 0x3f	; 63
 23e:	0f 92       	push	r0
 240:	11 24       	eor	r1, r1
 242:	8f 93       	push	r24
 244:	9f 93       	push	r25
 246:	af 93       	push	r26
 248:	bf 93       	push	r27
 24a:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <__data_end>
 24e:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <__data_end+0x1>
 252:	a0 91 4c 01 	lds	r26, 0x014C	; 0x80014c <__data_end+0x2>
 256:	b0 91 4d 01 	lds	r27, 0x014D	; 0x80014d <__data_end+0x3>
 25a:	01 97       	sbiw	r24, 0x01	; 1
 25c:	a1 09       	sbc	r26, r1
 25e:	b1 09       	sbc	r27, r1
 260:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__data_end>
 264:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__data_end+0x1>
 268:	a0 93 4c 01 	sts	0x014C, r26	; 0x80014c <__data_end+0x2>
 26c:	b0 93 4d 01 	sts	0x014D, r27	; 0x80014d <__data_end+0x3>
 270:	89 2b       	or	r24, r25
 272:	8a 2b       	or	r24, r26
 274:	8b 2b       	or	r24, r27
 276:	99 f4       	brne	.+38     	; 0x29e <__vector_13+0x66>
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <TimerFlag>
 27e:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <_avr_timer_M>
 282:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <_avr_timer_M+0x1>
 286:	a0 91 48 01 	lds	r26, 0x0148	; 0x800148 <_avr_timer_M+0x2>
 28a:	b0 91 49 01 	lds	r27, 0x0149	; 0x800149 <_avr_timer_M+0x3>
 28e:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__data_end>
 292:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__data_end+0x1>
 296:	a0 93 4c 01 	sts	0x014C, r26	; 0x80014c <__data_end+0x2>
 29a:	b0 93 4d 01 	sts	0x014D, r27	; 0x80014d <__data_end+0x3>
 29e:	bf 91       	pop	r27
 2a0:	af 91       	pop	r26
 2a2:	9f 91       	pop	r25
 2a4:	8f 91       	pop	r24
 2a6:	0f 90       	pop	r0
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	0f 90       	pop	r0
 2ac:	1f 90       	pop	r1
 2ae:	18 95       	reti

000002b0 <main>:
	task *tasks[] = { &task1};
	task1.state = -1;//Task initial state.
	task1.period = 500;//Task Period.
	task1.elapsedTime = 0;//Task current elapsed time.
	task1.TickFct = &TickFct_LCD;//Function pointer for the tick.
	tempStr[16] = 0;
 2b0:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <tempStr+0x10>
	DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs
 2b4:	11 b8       	out	0x01, r1	; 1
 2b6:	8f ef       	ldi	r24, 0xFF	; 255
 2b8:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00; // Configure port B's 8 pins as outputs, initialize to 0s
 2ba:	84 b9       	out	0x04, r24	; 4
 2bc:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00; // LCD data lines
 2be:	87 b9       	out	0x07, r24	; 7
 2c0:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00; // LCD control lines
 2c2:	8a b9       	out	0x0a, r24	; 10
 2c4:	1b b8       	out	0x0b, r1	; 11
	j = 0;
 2c6:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <j+0x1>
 2ca:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <j>
	TimerSet(1);
 2ce:	61 e0       	ldi	r22, 0x01	; 1
 2d0:	70 e0       	ldi	r23, 0x00	; 0
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	7b df       	rcall	.-266    	; 0x1ce <TimerSet>
	TimerOn();
 2d8:	8b df       	rcall	.-234    	; 0x1f0 <TimerOn>
	LCD_init();
 2da:	1d df       	rcall	.-454    	; 0x116 <LCD_init>
 2dc:	40 e0       	ldi	r20, 0x00	; 0
{
	task task1;
	task *tasks[] = { &task1};
	task1.state = -1;//Task initial state.
	task1.period = 500;//Task Period.
	task1.elapsedTime = 0;//Task current elapsed time.
 2de:	50 e0       	ldi	r21, 0x00	; 0
 2e0:	ba 01       	movw	r22, r20
 2e2:	2f ef       	ldi	r18, 0xFF	; 255

int main(void)
{
	task task1;
	task *tasks[] = { &task1};
	task1.state = -1;//Task initial state.
 2e4:	3f ef       	ldi	r19, 0xFF	; 255
 2e6:	06 c0       	rjmp	.+12     	; 0x2f4 <main+0x44>
	while(1)
	{
		unsigned char i;
		for (i = 0; i < tasksNum; ++i) {
			if(tasks[i]->elapsedTime >= tasks[i]->period) {
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 2e8:	c9 01       	movw	r24, r18
 2ea:	46 df       	rcall	.-372    	; 0x178 <TickFct_LCD>
 2ec:	9c 01       	movw	r18, r24
 2ee:	40 e0       	ldi	r20, 0x00	; 0
				tasks[i]->elapsedTime = 0;
 2f0:	50 e0       	ldi	r21, 0x00	; 0
 2f2:	ba 01       	movw	r22, r20
 2f4:	4f 5f       	subi	r20, 0xFF	; 255
			}
			tasks[i]->elapsedTime += 1;
 2f6:	5f 4f       	sbci	r21, 0xFF	; 255
 2f8:	6f 4f       	sbci	r22, 0xFF	; 255
 2fa:	7f 4f       	sbci	r23, 0xFF	; 255
 2fc:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <TimerFlag>
		}
		while(!TimerFlag){}	//Sleep();
 300:	99 23       	and	r25, r25
 302:	e1 f3       	breq	.-8      	; 0x2fc <main+0x4c>
 304:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <TimerFlag>
			TimerFlag = 0;
 308:	44 3f       	cpi	r20, 0xF4	; 244
	LCD_init();
	while(1)
	{
		unsigned char i;
		for (i = 0; i < tasksNum; ++i) {
			if(tasks[i]->elapsedTime >= tasks[i]->period) {
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	58 07       	cpc	r21, r24
 30e:	61 05       	cpc	r22, r1
 310:	71 05       	cpc	r23, r1
 312:	80 f3       	brcs	.-32     	; 0x2f4 <main+0x44>
 314:	e9 cf       	rjmp	.-46     	; 0x2e8 <main+0x38>

00000316 <_exit>:
 316:	f8 94       	cli

00000318 <__stop_program>:
 318:	ff cf       	rjmp	.-2      	; 0x318 <__stop_program>
